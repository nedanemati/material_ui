{"ast":null,"code":"var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\n\nvar cmpStr = require('../../tokenizer').cmpStr;\n\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis; // <url-token> | <function-token> <string> )\n\nmodule.exports = {\n  name: 'Url',\n  structure: {\n    value: ['String', 'Raw']\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var value;\n\n    switch (this.scanner.tokenType) {\n      case URL:\n        var rawStart = start + 4;\n        var rawEnd = this.scanner.tokenEnd - 1;\n\n        while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n          rawStart++;\n        }\n\n        while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n          rawEnd--;\n        }\n\n        value = {\n          type: 'Raw',\n          loc: this.getLocation(rawStart, rawEnd),\n          value: this.scanner.source.substring(rawStart, rawEnd)\n        };\n        this.eat(URL);\n        break;\n\n      case FUNCTION:\n        if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n          this.error('Function name must be `url`');\n        }\n\n        this.eat(FUNCTION);\n        this.scanner.skipSC();\n        value = this.String();\n        this.scanner.skipSC();\n        this.eat(RIGHTPARENTHESIS);\n        break;\n\n      default:\n        this.error('Url or Function is expected');\n    }\n\n    return {\n      type: 'Url',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      value: value\n    };\n  },\n  generate: function (node) {\n    this.chunk('url');\n    this.chunk('(');\n    this.node(node.value);\n    this.chunk(')');\n  }\n};","map":{"version":3,"names":["isWhiteSpace","require","cmpStr","TYPE","FUNCTION","Function","URL","Url","RIGHTPARENTHESIS","RightParenthesis","module","exports","name","structure","value","parse","start","scanner","tokenStart","tokenType","rawStart","rawEnd","tokenEnd","source","charCodeAt","type","loc","getLocation","substring","eat","error","skipSC","String","generate","node","chunk"],"sources":["/Users/nedanemati/Desktop/material-ui-github/node_modules/css-tree/lib/syntax/node/Url.js"],"sourcesContent":["var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <url-token> | <function-token> <string> )\nmodule.exports = {\n    name: 'Url',\n    structure: {\n        value: ['String', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var value;\n\n        switch (this.scanner.tokenType) {\n            case URL:\n                var rawStart = start + 4;\n                var rawEnd = this.scanner.tokenEnd - 1;\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n                    rawStart++;\n                }\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n                    rawEnd--;\n                }\n\n                value = {\n                    type: 'Raw',\n                    loc: this.getLocation(rawStart, rawEnd),\n                    value: this.scanner.source.substring(rawStart, rawEnd)\n                };\n\n                this.eat(URL);\n                break;\n\n            case FUNCTION:\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n                    this.error('Function name must be `url`');\n                }\n\n                this.eat(FUNCTION);\n                this.scanner.skipSC();\n                value = this.String();\n                this.scanner.skipSC();\n                this.eat(RIGHTPARENTHESIS);\n                break;\n\n            default:\n                this.error('Url or Function is expected');\n        }\n\n        return {\n            type: 'Url',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk('url');\n        this.chunk('(');\n        this.node(node.value);\n        this.chunk(')');\n    }\n};\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,YAA9C;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,MAAxC;;AACA,IAAIC,IAAI,GAAGF,OAAO,CAAC,iBAAD,CAAP,CAA2BE,IAAtC;;AAEA,IAAIC,QAAQ,GAAGD,IAAI,CAACE,QAApB;AACA,IAAIC,GAAG,GAAGH,IAAI,CAACI,GAAf;AACA,IAAIC,gBAAgB,GAAGL,IAAI,CAACM,gBAA5B,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE,KADO;EAEbC,SAAS,EAAE;IACPC,KAAK,EAAE,CAAC,QAAD,EAAW,KAAX;EADA,CAFE;EAKbC,KAAK,EAAE,YAAW;IACd,IAAIC,KAAK,GAAG,KAAKC,OAAL,CAAaC,UAAzB;IACA,IAAIJ,KAAJ;;IAEA,QAAQ,KAAKG,OAAL,CAAaE,SAArB;MACI,KAAKb,GAAL;QACI,IAAIc,QAAQ,GAAGJ,KAAK,GAAG,CAAvB;QACA,IAAIK,MAAM,GAAG,KAAKJ,OAAL,CAAaK,QAAb,GAAwB,CAArC;;QAEA,OAAOF,QAAQ,GAAGC,MAAX,IAAqBrB,YAAY,CAAC,KAAKiB,OAAL,CAAaM,MAAb,CAAoBC,UAApB,CAA+BJ,QAA/B,CAAD,CAAxC,EAAoF;UAChFA,QAAQ;QACX;;QAED,OAAOA,QAAQ,GAAGC,MAAX,IAAqBrB,YAAY,CAAC,KAAKiB,OAAL,CAAaM,MAAb,CAAoBC,UAApB,CAA+BH,MAAM,GAAG,CAAxC,CAAD,CAAxC,EAAsF;UAClFA,MAAM;QACT;;QAEDP,KAAK,GAAG;UACJW,IAAI,EAAE,KADF;UAEJC,GAAG,EAAE,KAAKC,WAAL,CAAiBP,QAAjB,EAA2BC,MAA3B,CAFD;UAGJP,KAAK,EAAE,KAAKG,OAAL,CAAaM,MAAb,CAAoBK,SAApB,CAA8BR,QAA9B,EAAwCC,MAAxC;QAHH,CAAR;QAMA,KAAKQ,GAAL,CAASvB,GAAT;QACA;;MAEJ,KAAKF,QAAL;QACI,IAAI,CAACF,MAAM,CAAC,KAAKe,OAAL,CAAaM,MAAd,EAAsB,KAAKN,OAAL,CAAaC,UAAnC,EAA+C,KAAKD,OAAL,CAAaK,QAA5D,EAAsE,MAAtE,CAAX,EAA0F;UACtF,KAAKQ,KAAL,CAAW,6BAAX;QACH;;QAED,KAAKD,GAAL,CAASzB,QAAT;QACA,KAAKa,OAAL,CAAac,MAAb;QACAjB,KAAK,GAAG,KAAKkB,MAAL,EAAR;QACA,KAAKf,OAAL,CAAac,MAAb;QACA,KAAKF,GAAL,CAASrB,gBAAT;QACA;;MAEJ;QACI,KAAKsB,KAAL,CAAW,6BAAX;IAnCR;;IAsCA,OAAO;MACHL,IAAI,EAAE,KADH;MAEHC,GAAG,EAAE,KAAKC,WAAL,CAAiBX,KAAjB,EAAwB,KAAKC,OAAL,CAAaC,UAArC,CAFF;MAGHJ,KAAK,EAAEA;IAHJ,CAAP;EAKH,CApDY;EAqDbmB,QAAQ,EAAE,UAASC,IAAT,EAAe;IACrB,KAAKC,KAAL,CAAW,KAAX;IACA,KAAKA,KAAL,CAAW,GAAX;IACA,KAAKD,IAAL,CAAUA,IAAI,CAACpB,KAAf;IACA,KAAKqB,KAAL,CAAW,GAAX;EACH;AA1DY,CAAjB"},"metadata":{},"sourceType":"script"}