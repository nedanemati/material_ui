{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar noop = function () {};\n\nfunction ensureFunction(value) {\n  return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n  return function (node, item, list) {\n    if (node.type === type) {\n      fn.call(this, node, item, list);\n    }\n  };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n  var structure = nodeType.structure;\n  var walkers = [];\n\n  for (var key in structure) {\n    if (hasOwnProperty.call(structure, key) === false) {\n      continue;\n    }\n\n    var fieldTypes = structure[key];\n    var walker = {\n      name: key,\n      type: false,\n      nullable: false\n    };\n\n    if (!Array.isArray(structure[key])) {\n      fieldTypes = [structure[key]];\n    }\n\n    for (var i = 0; i < fieldTypes.length; i++) {\n      var fieldType = fieldTypes[i];\n\n      if (fieldType === null) {\n        walker.nullable = true;\n      } else if (typeof fieldType === 'string') {\n        walker.type = 'node';\n      } else if (Array.isArray(fieldType)) {\n        walker.type = 'list';\n      }\n    }\n\n    if (walker.type) {\n      walkers.push(walker);\n    }\n  }\n\n  if (walkers.length) {\n    return {\n      context: nodeType.walkContext,\n      fields: walkers\n    };\n  }\n\n  return null;\n}\n\nfunction getTypesFromConfig(config) {\n  var types = {};\n\n  for (var name in config.node) {\n    if (hasOwnProperty.call(config.node, name)) {\n      var nodeType = config.node[name];\n\n      if (!nodeType.structure) {\n        throw new Error('Missed `structure` field in `' + name + '` node type definition');\n      }\n\n      types[name] = getWalkersFromStructure(name, nodeType);\n    }\n  }\n\n  return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n  var fields = config.fields.slice();\n  var contextName = config.context;\n  var useContext = typeof contextName === 'string';\n\n  if (reverse) {\n    fields.reverse();\n  }\n\n  return function (node, context, walk) {\n    var prevContextValue;\n\n    if (useContext) {\n      prevContextValue = context[contextName];\n      context[contextName] = node;\n    }\n\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n      var ref = node[field.name];\n\n      if (!field.nullable || ref) {\n        if (field.type === 'list') {\n          if (reverse) {\n            ref.forEachRight(walk);\n          } else {\n            ref.forEach(walk);\n          }\n        } else {\n          walk(ref);\n        }\n      }\n    }\n\n    if (useContext) {\n      context[contextName] = prevContextValue;\n    }\n  };\n}\n\nfunction createFastTraveralMap(iterators) {\n  return {\n    Atrule: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block\n    },\n    Rule: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block\n    },\n    Declaration: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block\n    }\n  };\n}\n\nmodule.exports = function createWalker(config) {\n  var types = getTypesFromConfig(config);\n  var iteratorsNatural = {};\n  var iteratorsReverse = {};\n\n  for (var name in types) {\n    if (hasOwnProperty.call(types, name) && types[name] !== null) {\n      iteratorsNatural[name] = createTypeIterator(types[name], false);\n      iteratorsReverse[name] = createTypeIterator(types[name], true);\n    }\n  }\n\n  var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n  var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n  var walk = function (root, options) {\n    function walkNode(node, item, list) {\n      enter.call(context, node, item, list);\n\n      if (iterators.hasOwnProperty(node.type)) {\n        iterators[node.type](node, context, walkNode);\n      }\n\n      leave.call(context, node, item, list);\n    }\n\n    var enter = noop;\n    var leave = noop;\n    var iterators = iteratorsNatural;\n    var context = {\n      root: root,\n      stylesheet: null,\n      atrule: null,\n      atrulePrelude: null,\n      rule: null,\n      selector: null,\n      block: null,\n      declaration: null,\n      function: null\n    };\n\n    if (typeof options === 'function') {\n      enter = options;\n    } else if (options) {\n      enter = ensureFunction(options.enter);\n      leave = ensureFunction(options.leave);\n\n      if (options.reverse) {\n        iterators = iteratorsReverse;\n      }\n\n      if (options.visit) {\n        if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n          iterators = options.reverse ? fastTraversalIteratorsReverse[options.visit] : fastTraversalIteratorsNatural[options.visit];\n        } else if (!types.hasOwnProperty(options.visit)) {\n          throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\n        }\n\n        enter = invokeForType(enter, options.visit);\n        leave = invokeForType(leave, options.visit);\n      }\n    }\n\n    if (enter === noop && leave === noop) {\n      throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    } // swap handlers in reverse mode to invert visit order\n\n\n    if (options.reverse) {\n      var tmp = enter;\n      enter = leave;\n      leave = tmp;\n    }\n\n    walkNode(root);\n  };\n\n  walk.find = function (ast, fn) {\n    var found = null;\n    walk(ast, function (node, item, list) {\n      if (found === null && fn.call(this, node, item, list)) {\n        found = node;\n      }\n    });\n    return found;\n  };\n\n  walk.findLast = function (ast, fn) {\n    var found = null;\n    walk(ast, {\n      reverse: true,\n      enter: function (node, item, list) {\n        if (found === null && fn.call(this, node, item, list)) {\n          found = node;\n        }\n      }\n    });\n    return found;\n  };\n\n  walk.findAll = function (ast, fn) {\n    var found = [];\n    walk(ast, function (node, item, list) {\n      if (fn.call(this, node, item, list)) {\n        found.push(node);\n      }\n    });\n    return found;\n  };\n\n  return walk;\n};","map":{"version":3,"names":["hasOwnProperty","Object","prototype","noop","ensureFunction","value","invokeForType","fn","type","node","item","list","call","getWalkersFromStructure","name","nodeType","structure","walkers","key","fieldTypes","walker","nullable","Array","isArray","i","length","fieldType","push","context","walkContext","fields","getTypesFromConfig","config","types","Error","createTypeIterator","reverse","slice","contextName","useContext","walk","prevContextValue","field","ref","forEachRight","forEach","createFastTraveralMap","iterators","Atrule","StyleSheet","Rule","Block","Declaration","module","exports","createWalker","iteratorsNatural","iteratorsReverse","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","options","walkNode","enter","leave","stylesheet","atrule","atrulePrelude","rule","selector","block","declaration","function","visit","keys","join","tmp","find","ast","found","findLast","findAll"],"sources":["/Users/nedanemati/Desktop/material-ui-github/node_modules/css-tree/lib/walker/create.js"],"sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    var structure = nodeType.structure;\n    var walkers = [];\n\n    for (var key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        var fieldTypes = structure[key];\n        var walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(structure[key])) {\n            fieldTypes = [structure[key]];\n        }\n\n        for (var i = 0; i < fieldTypes.length; i++) {\n            var fieldType = fieldTypes[i];\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    var types = {};\n\n    for (var name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            var nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    var fields = config.fields.slice();\n    var contextName = config.context;\n    var useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk) {\n        var prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i];\n            var ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    if (reverse) {\n                        ref.forEachRight(walk);\n                    } else {\n                        ref.forEach(walk);\n                    }\n                } else {\n                    walk(ref);\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap(iterators) {\n    return {\n        Atrule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Rule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Declaration: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        }\n    };\n}\n\nmodule.exports = function createWalker(config) {\n    var types = getTypesFromConfig(config);\n    var iteratorsNatural = {};\n    var iteratorsReverse = {};\n\n    for (var name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    var walk = function(root, options) {\n        function walkNode(node, item, list) {\n            enter.call(context, node, item, list);\n\n            if (iterators.hasOwnProperty(node.type)) {\n                iterators[node.type](node, context, walkNode);\n            }\n\n            leave.call(context, node, item, list);\n        }\n\n        var enter = noop;\n        var leave = noop;\n        var iterators = iteratorsNatural;\n        var context = {\n            root: root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        // swap handlers in reverse mode to invert visit order\n        if (options.reverse) {\n            var tmp = enter;\n            enter = leave;\n            leave = tmp;\n        }\n\n        walkNode(root);\n    };\n\n    walk.find = function(ast, fn) {\n        var found = null;\n\n        walk(ast, function(node, item, list) {\n            if (found === null && fn.call(this, node, item, list)) {\n                found = node;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        var found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter: function(node, item, list) {\n                if (found === null && fn.call(this, node, item, list)) {\n                    found = node;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        var found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}