{"ast":null,"code":"var tokenizer = require('../tokenizer');\n\nvar isIdentifierStart = tokenizer.isIdentifierStart;\nvar isHexDigit = tokenizer.isHexDigit;\nvar isDigit = tokenizer.isDigit;\nvar cmpStr = tokenizer.cmpStr;\nvar consumeNumber = tokenizer.consumeNumber;\nvar TYPE = tokenizer.TYPE;\n\nvar anPlusB = require('./generic-an-plus-b');\n\nvar urange = require('./generic-urange');\n\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc(']; // https://www.w3.org/TR/css-values-3/#lengths\n\nvar LENGTH = {\n  // absolute length units\n  'px': true,\n  'mm': true,\n  'cm': true,\n  'in': true,\n  'pt': true,\n  'pc': true,\n  'q': true,\n  // relative length units\n  'em': true,\n  'ex': true,\n  'ch': true,\n  'rem': true,\n  // viewport-percentage lengths\n  'vh': true,\n  'vw': true,\n  'vmin': true,\n  'vmax': true,\n  'vm': true\n};\nvar ANGLE = {\n  'deg': true,\n  'grad': true,\n  'rad': true,\n  'turn': true\n};\nvar TIME = {\n  's': true,\n  'ms': true\n};\nvar FREQUENCY = {\n  'hz': true,\n  'khz': true\n}; // https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\n\nvar RESOLUTION = {\n  'dpi': true,\n  'dpcm': true,\n  'dppx': true,\n  'x': true // https://github.com/w3c/csswg-drafts/issues/461\n\n}; // https://drafts.csswg.org/css-grid/#fr-unit\n\nvar FLEX = {\n  'fr': true\n}; // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\n\nvar DECIBEL = {\n  'db': true\n}; // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n\nvar SEMITONES = {\n  'st': true\n}; // safe char code getter\n\nfunction charCode(str, index) {\n  return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n  return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n  for (var i = 0; i < expected.length; i++) {\n    if (eqStr(actual, expected[i])) {\n      return true;\n    }\n  }\n\n  return false;\n} // IE postfix hack, i.e. 123\\0 or 123px\\9\n\n\nfunction isPostfixIeHack(str, offset) {\n  if (offset !== str.length - 2) {\n    return false;\n  }\n\n  return str.charCodeAt(offset) === 0x005C && // U+005C REVERSE SOLIDUS (\\)\n  isDigit(str.charCodeAt(offset + 1));\n}\n\nfunction outOfRange(opts, value, numEnd) {\n  if (opts && opts.type === 'Range') {\n    var num = Number(numEnd !== undefined && numEnd !== value.length ? value.substr(0, numEnd) : value);\n\n    if (isNaN(num)) {\n      return true;\n    }\n\n    if (opts.min !== null && num < opts.min) {\n      return true;\n    }\n\n    if (opts.max !== null && num > opts.max) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n  var startIdx = token.index;\n  var length = 0; // balanced token consuming\n\n  do {\n    length++;\n\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n\n  return length;\n} // TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\n\n\nfunction calc(next) {\n  return function (token, getNextToken, opts) {\n    if (token === null) {\n      return 0;\n    }\n\n    if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n      return consumeFunction(token, getNextToken);\n    }\n\n    return next(token, getNextToken, opts);\n  };\n}\n\nfunction tokenType(expectedTokenType) {\n  return function (token) {\n    if (token === null || token.type !== expectedTokenType) {\n      return 0;\n    }\n\n    return 1;\n  };\n}\n\nfunction func(name) {\n  name = name + '(';\n  return function (token, getNextToken) {\n    if (token !== null && eqStr(token.value, name)) {\n      return consumeFunction(token, getNextToken);\n    }\n\n    return 0;\n  };\n} // =========================\n// Complex types\n//\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\n\n\nfunction customIdent(token) {\n  if (token === null || token.type !== TYPE.Ident) {\n    return 0;\n  }\n\n  var name = token.value.toLowerCase(); // The CSS-wide keywords are not valid <custom-ident>s\n\n  if (eqStrAny(name, cssWideKeywords)) {\n    return 0;\n  } // The default keyword is reserved and is also not a valid <custom-ident>\n\n\n  if (eqStr(name, 'default')) {\n    return 0;\n  } // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n  // Specifications using <custom-ident> must specify clearly what other keywords\n  // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n  // in that property’s value definition are excluded. Excluded keywords are excluded\n  // in all ASCII case permutations.\n\n\n  return 1;\n} // https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\n\n\nfunction customPropertyName(token) {\n  // ... defined as any valid identifier\n  if (token === null || token.type !== TYPE.Ident) {\n    return 0;\n  } // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n\n\n  if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n    return 0;\n  }\n\n  return 1;\n} // https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\n\n\nfunction hexColor(token) {\n  if (token === null || token.type !== TYPE.Hash) {\n    return 0;\n  }\n\n  var length = token.value.length; // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n\n  if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n    return 0;\n  }\n\n  for (var i = 1; i < length; i++) {\n    if (!isHexDigit(token.value.charCodeAt(i))) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\nfunction idSelector(token) {\n  if (token === null || token.type !== TYPE.Hash) {\n    return 0;\n  }\n\n  if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n    return 0;\n  }\n\n  return 1;\n} // https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\n\n\nfunction declarationValue(token, getNextToken) {\n  if (!token) {\n    return 0;\n  }\n\n  var length = 0;\n  var level = 0;\n  var startIdx = token.index; // The <declaration-value> production matches any sequence of one or more tokens,\n  // so long as the sequence ...\n\n  scan: do {\n    switch (token.type) {\n      // ... does not contain <bad-string-token>, <bad-url-token>,\n      case TYPE.BadString:\n      case TYPE.BadUrl:\n        break scan;\n      // ... unmatched <)-token>, <]-token>, or <}-token>,\n\n      case TYPE.RightCurlyBracket:\n      case TYPE.RightParenthesis:\n      case TYPE.RightSquareBracket:\n        if (token.balance > token.index || token.balance < startIdx) {\n          break scan;\n        }\n\n        level--;\n        break;\n      // ... or top-level <semicolon-token> tokens\n\n      case TYPE.Semicolon:\n        if (level === 0) {\n          break scan;\n        }\n\n        break;\n      // ... or <delim-token> tokens with a value of \"!\"\n\n      case TYPE.Delim:\n        if (token.value === '!' && level === 0) {\n          break scan;\n        }\n\n        break;\n\n      case TYPE.Function:\n      case TYPE.LeftParenthesis:\n      case TYPE.LeftSquareBracket:\n      case TYPE.LeftCurlyBracket:\n        level++;\n        break;\n    }\n\n    length++; // until balance closing\n\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n\n  return length;\n} // https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\n\n\nfunction anyValue(token, getNextToken) {\n  if (!token) {\n    return 0;\n  }\n\n  var startIdx = token.index;\n  var length = 0; // The <any-value> production matches any sequence of one or more tokens,\n  // so long as the sequence ...\n\n  scan: do {\n    switch (token.type) {\n      // ... does not contain <bad-string-token>, <bad-url-token>,\n      case TYPE.BadString:\n      case TYPE.BadUrl:\n        break scan;\n      // ... unmatched <)-token>, <]-token>, or <}-token>,\n\n      case TYPE.RightCurlyBracket:\n      case TYPE.RightParenthesis:\n      case TYPE.RightSquareBracket:\n        if (token.balance > token.index || token.balance < startIdx) {\n          break scan;\n        }\n\n        break;\n    }\n\n    length++; // until balance closing\n\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n\n  return length;\n} // =========================\n// Dimensions\n//\n\n\nfunction dimension(type) {\n  return function (token, getNextToken, opts) {\n    if (token === null || token.type !== TYPE.Dimension) {\n      return 0;\n    }\n\n    var numberEnd = consumeNumber(token.value, 0); // check unit\n\n    if (type !== null) {\n      // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n      var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n      var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);\n\n      if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n        return 0;\n      }\n    } // check range if specified\n\n\n    if (outOfRange(opts, token.value, numberEnd)) {\n      return 0;\n    }\n\n    return 1;\n  };\n} // =========================\n// Percentage\n//\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\n\n\nfunction percentage(token, getNextToken, opts) {\n  // ... corresponds to the <percentage-token> production\n  if (token === null || token.type !== TYPE.Percentage) {\n    return 0;\n  } // check range if specified\n\n\n  if (outOfRange(opts, token.value, token.value.length - 1)) {\n    return 0;\n  }\n\n  return 1;\n} // =========================\n// Numeric\n//\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\n\n\nfunction zero(next) {\n  if (typeof next !== 'function') {\n    next = function () {\n      return 0;\n    };\n  }\n\n  return function (token, getNextToken, opts) {\n    if (token !== null && token.type === TYPE.Number) {\n      if (Number(token.value) === 0) {\n        return 1;\n      }\n    }\n\n    return next(token, getNextToken, opts);\n  };\n} // § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\n\n\nfunction number(token, getNextToken, opts) {\n  if (token === null) {\n    return 0;\n  }\n\n  var numberEnd = consumeNumber(token.value, 0);\n  var isNumber = numberEnd === token.value.length;\n\n  if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n    return 0;\n  } // check range if specified\n\n\n  if (outOfRange(opts, token.value, numberEnd)) {\n    return 0;\n  }\n\n  return 1;\n} // §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\n\n\nfunction integer(token, getNextToken, opts) {\n  // ... corresponds to a subset of the <number-token> production\n  if (token === null || token.type !== TYPE.Number) {\n    return 0;\n  } // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n\n\n  var i = token.value.charCodeAt(0) === 0x002B || // U+002B PLUS SIGN (+)\n  token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n  // When written literally, an integer is one or more decimal digits 0 through 9 ...\n\n  for (; i < token.value.length; i++) {\n    if (!isDigit(token.value.charCodeAt(i))) {\n      return 0;\n    }\n  } // check range if specified\n\n\n  if (outOfRange(opts, token.value, i)) {\n    return 0;\n  }\n\n  return 1;\n}\n\nmodule.exports = {\n  // token types\n  'ident-token': tokenType(TYPE.Ident),\n  'function-token': tokenType(TYPE.Function),\n  'at-keyword-token': tokenType(TYPE.AtKeyword),\n  'hash-token': tokenType(TYPE.Hash),\n  'string-token': tokenType(TYPE.String),\n  'bad-string-token': tokenType(TYPE.BadString),\n  'url-token': tokenType(TYPE.Url),\n  'bad-url-token': tokenType(TYPE.BadUrl),\n  'delim-token': tokenType(TYPE.Delim),\n  'number-token': tokenType(TYPE.Number),\n  'percentage-token': tokenType(TYPE.Percentage),\n  'dimension-token': tokenType(TYPE.Dimension),\n  'whitespace-token': tokenType(TYPE.WhiteSpace),\n  'CDO-token': tokenType(TYPE.CDO),\n  'CDC-token': tokenType(TYPE.CDC),\n  'colon-token': tokenType(TYPE.Colon),\n  'semicolon-token': tokenType(TYPE.Semicolon),\n  'comma-token': tokenType(TYPE.Comma),\n  '[-token': tokenType(TYPE.LeftSquareBracket),\n  ']-token': tokenType(TYPE.RightSquareBracket),\n  '(-token': tokenType(TYPE.LeftParenthesis),\n  ')-token': tokenType(TYPE.RightParenthesis),\n  '{-token': tokenType(TYPE.LeftCurlyBracket),\n  '}-token': tokenType(TYPE.RightCurlyBracket),\n  // token type aliases\n  'string': tokenType(TYPE.String),\n  'ident': tokenType(TYPE.Ident),\n  // complex types\n  'custom-ident': customIdent,\n  'custom-property-name': customPropertyName,\n  'hex-color': hexColor,\n  'id-selector': idSelector,\n  // element( <id-selector> )\n  'an-plus-b': anPlusB,\n  'urange': urange,\n  'declaration-value': declarationValue,\n  'any-value': anyValue,\n  // dimensions\n  'dimension': calc(dimension(null)),\n  'angle': calc(dimension(ANGLE)),\n  'decibel': calc(dimension(DECIBEL)),\n  'frequency': calc(dimension(FREQUENCY)),\n  'flex': calc(dimension(FLEX)),\n  'length': calc(zero(dimension(LENGTH))),\n  'resolution': calc(dimension(RESOLUTION)),\n  'semitones': calc(dimension(SEMITONES)),\n  'time': calc(dimension(TIME)),\n  // percentage\n  'percentage': calc(percentage),\n  // numeric\n  'zero': zero(),\n  'number': calc(number),\n  'integer': calc(integer),\n  // old IE stuff\n  '-ms-legacy-expression': func('expression')\n};","map":{"version":3,"names":["tokenizer","require","isIdentifierStart","isHexDigit","isDigit","cmpStr","consumeNumber","TYPE","anPlusB","urange","cssWideKeywords","calcFunctionNames","LENGTH","ANGLE","TIME","FREQUENCY","RESOLUTION","FLEX","DECIBEL","SEMITONES","charCode","str","index","length","charCodeAt","eqStr","actual","expected","eqStrAny","i","isPostfixIeHack","offset","outOfRange","opts","value","numEnd","type","num","Number","undefined","substr","isNaN","min","max","consumeFunction","token","getNextToken","startIdx","balance","calc","next","Function","tokenType","expectedTokenType","func","name","customIdent","Ident","toLowerCase","customPropertyName","hexColor","Hash","idSelector","declarationValue","level","scan","BadString","BadUrl","RightCurlyBracket","RightParenthesis","RightSquareBracket","Semicolon","Delim","LeftParenthesis","LeftSquareBracket","LeftCurlyBracket","anyValue","dimension","Dimension","numberEnd","reverseSolidusOffset","indexOf","unit","substring","hasOwnProperty","percentage","Percentage","zero","number","isNumber","integer","module","exports","AtKeyword","String","Url","WhiteSpace","CDO","CDC","Colon","Comma"],"sources":["/Users/nedanemati/Desktop/material-ui-github/node_modules/css-tree/lib/lexer/generic.js"],"sourcesContent":["var tokenizer = require('../tokenizer');\nvar isIdentifierStart = tokenizer.isIdentifierStart;\nvar isHexDigit = tokenizer.isHexDigit;\nvar isDigit = tokenizer.isDigit;\nvar cmpStr = tokenizer.cmpStr;\nvar consumeNumber = tokenizer.consumeNumber;\nvar TYPE = tokenizer.TYPE;\nvar anPlusB = require('./generic-an-plus-b');\nvar urange = require('./generic-urange');\n\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\n\n// https://www.w3.org/TR/css-values-3/#lengths\nvar LENGTH = {\n    // absolute length units\n    'px': true,\n    'mm': true,\n    'cm': true,\n    'in': true,\n    'pt': true,\n    'pc': true,\n    'q': true,\n\n    // relative length units\n    'em': true,\n    'ex': true,\n    'ch': true,\n    'rem': true,\n\n    // viewport-percentage lengths\n    'vh': true,\n    'vw': true,\n    'vmin': true,\n    'vmax': true,\n    'vm': true\n};\n\nvar ANGLE = {\n    'deg': true,\n    'grad': true,\n    'rad': true,\n    'turn': true\n};\n\nvar TIME = {\n    's': true,\n    'ms': true\n};\n\nvar FREQUENCY = {\n    'hz': true,\n    'khz': true\n};\n\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\nvar RESOLUTION = {\n    'dpi': true,\n    'dpcm': true,\n    'dppx': true,\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\n};\n\n// https://drafts.csswg.org/css-grid/#fr-unit\nvar FLEX = {\n    'fr': true\n};\n\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nvar DECIBEL = {\n    'db': true\n};\n\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\nvar SEMITONES = {\n    'st': true\n};\n\n// safe char code getter\nfunction charCode(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (var i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(str.charCodeAt(offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        var num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        if (opts.min !== null && num < opts.min) {\n            return true;\n        }\n\n        if (opts.max !== null && num > opts.max) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    var startIdx = token.index;\n    var length = 0;\n\n    // balanced token consuming\n    do {\n        length++;\n\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\nfunction func(name) {\n    name = name + '(';\n\n    return function(token, getNextToken) {\n        if (token !== null && eqStr(token.value, name)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return 0;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    var name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    var length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (var i = 1; i < length; i++) {\n        if (!isHexDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var length = 0;\n    var level = 0;\n    var startIdx = token.index;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                level--;\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case TYPE.Semicolon:\n                if (level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case TYPE.Delim:\n                if (token.value === '!' && level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            case TYPE.Function:\n            case TYPE.LeftParenthesis:\n            case TYPE.LeftSquareBracket:\n            case TYPE.LeftCurlyBracket:\n                level++;\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var startIdx = token.index;\n    var length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== TYPE.Dimension) {\n            return 0;\n        }\n\n        var numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== TYPE.Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === TYPE.Number) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    var numberEnd = consumeNumber(token.value, 0);\n    var isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== TYPE.Number) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\nmodule.exports = {\n    // token types\n    'ident-token': tokenType(TYPE.Ident),\n    'function-token': tokenType(TYPE.Function),\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\n    'hash-token': tokenType(TYPE.Hash),\n    'string-token': tokenType(TYPE.String),\n    'bad-string-token': tokenType(TYPE.BadString),\n    'url-token': tokenType(TYPE.Url),\n    'bad-url-token': tokenType(TYPE.BadUrl),\n    'delim-token': tokenType(TYPE.Delim),\n    'number-token': tokenType(TYPE.Number),\n    'percentage-token': tokenType(TYPE.Percentage),\n    'dimension-token': tokenType(TYPE.Dimension),\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\n    'CDO-token': tokenType(TYPE.CDO),\n    'CDC-token': tokenType(TYPE.CDC),\n    'colon-token': tokenType(TYPE.Colon),\n    'semicolon-token': tokenType(TYPE.Semicolon),\n    'comma-token': tokenType(TYPE.Comma),\n    '[-token': tokenType(TYPE.LeftSquareBracket),\n    ']-token': tokenType(TYPE.RightSquareBracket),\n    '(-token': tokenType(TYPE.LeftParenthesis),\n    ')-token': tokenType(TYPE.RightParenthesis),\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\n    '}-token': tokenType(TYPE.RightCurlyBracket),\n\n    // token type aliases\n    'string': tokenType(TYPE.String),\n    'ident': tokenType(TYPE.Ident),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue,\n\n    // dimensions\n    'dimension': calc(dimension(null)),\n    'angle': calc(dimension(ANGLE)),\n    'decibel': calc(dimension(DECIBEL)),\n    'frequency': calc(dimension(FREQUENCY)),\n    'flex': calc(dimension(FLEX)),\n    'length': calc(zero(dimension(LENGTH))),\n    'resolution': calc(dimension(RESOLUTION)),\n    'semitones': calc(dimension(SEMITONES)),\n    'time': calc(dimension(TIME)),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // old IE stuff\n    '-ms-legacy-expression': func('expression')\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}