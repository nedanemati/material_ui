[{"/Users/nedanemati/Desktop/materialui/src/index.js":"1","/Users/nedanemati/Desktop/materialui/src/components/App.js":"2","/Users/nedanemati/Desktop/materialui/src/components/ui/Header.jsx":"3","/Users/nedanemati/Desktop/materialui/src/components/ui/Theme.jsx":"4","/Users/nedanemati/Desktop/material-ui-github/src/index.js":"5","/Users/nedanemati/Desktop/material-ui-github/src/components/App.js":"6","/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Header.jsx":"7","/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Theme.jsx":"8","/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Footer.jsx":"9"},{"size":265,"mtime":1652862253309,"results":"10","hashOfConfig":"11"},{"size":277,"mtime":1652876165063,"results":"12","hashOfConfig":"11"},{"size":2126,"mtime":1653141808574,"results":"13","hashOfConfig":"11"},{"size":1174,"mtime":1653141885764,"results":"14","hashOfConfig":"11"},{"size":265,"mtime":1652862253309,"results":"15","hashOfConfig":"16"},{"size":1046,"mtime":1653738451195,"results":"17","hashOfConfig":"16"},{"size":9222,"mtime":1653736125198,"results":"18","hashOfConfig":"16"},{"size":772,"mtime":1653290127071,"results":"19","hashOfConfig":"16"},{"size":784,"mtime":1653739544478,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ielmn",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vuhgfm",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/nedanemati/Desktop/materialui/src/index.js",[],[],"/Users/nedanemati/Desktop/materialui/src/components/App.js",[],[],[],"/Users/nedanemati/Desktop/materialui/src/components/ui/Header.jsx",[],[],[],"/Users/nedanemati/Desktop/materialui/src/components/ui/Theme.jsx",[],[],"/Users/nedanemati/Desktop/material-ui-github/src/index.js",[],[],[],"/Users/nedanemati/Desktop/material-ui-github/src/components/App.js",[],[],"/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Header.jsx",["54","55","56"],[],"import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport ToolBar from \"@mui/material/Toolbar\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport { makeStyles } from \"@mui/styles\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { Button, ListItem } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport logo from \"../../assets/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nimport List from \"@mui/material/List\";\n// import { ListItem } from \"@mui/material\";\n// import ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.25em\",\n    },\n  },\n  logo: {\n    height: \"8em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"7em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\",\n    },\n  },\n  logocontainer: {\n    padding: \"0 !important\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\",\n    color: \"white !important\",\n  },\n  button: {\n    ...theme.typography.estimate,\n    borderRadius: \"50px !important\",\n    marginLeft: \"50px !important\",\n    marginRight: \"25px !important\",\n    height: \"45px !important\",\n  },\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white !important\",\n    borderRadius: \"0px\",\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&hover\": {\n      opacity: 1,\n    },\n  },\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\",\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto !important\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue,\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"white\",\n    opacity: 0.7,\n  },\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange,\n  },\n  drawerItemselected: {\n    \"& .muiListItem-root\": {\n      opacity: 1,\n    },\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n  },\n}));\n\nfunction Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = typeof navigator !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [value, setValue] = useState(0);\n  const [anchorEl, setAnchorEL] = useState(null);\n  const [openMenu, setOpenMenu] = useState(false);\n  // const [open, setOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const changeHandler = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const clickHandler = (e) => {\n    setAnchorEL(e.currentTarget);\n    setOpenMenu(true);\n  };\n  const handeleMenuItemClick = (e, i) => {\n    setAnchorEL(null);\n    setOpenMenu(null);\n    setSelectedIndex(i);\n  };\n\n  const handleClose = () => {\n    setAnchorEL(null);\n    setOpenMenu(false);\n  };\n\n  const menuOptions = [\n    { id: 0, name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\n    { id: 1, name: \"Custom SoftWare Development\", link: \"/customsoftware\", activeIndex: 1, selectedIndex: 1 },\n    { id: 2, name: \"Mobile Apps Development\", link: \"/mobileapps\", activeIndex: 1, selectedIndex: 2 },\n    { id: 3, name: \"Websites\", link: \"/websites\", activeIndex: 1, selectedIndex: 3 },\n  ];\n  const routes = [\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"Services\",\n      link: \"/services\",\n      activeIndex: 1,\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: (event) => clickHandler(event),\n    },\n    { name: \"Revolution\", link: \"/revolution\", activeIndex: 2 },\n    { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n    { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 },\n  ];\n\n  useEffect(() => {\n    [...menuOptions, ...routes].forEach((route) => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (value !== route.activeIndex) {\n            setValue(route.activeIndex);\n            if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\n              setSelectedIndex(route.selectedIndex);\n            }\n          }\n          break;\n        case \"/estimate\":\n          setValue(5);\n          break;\n        default:\n          break;\n      }\n    });\n  }, [value, menuOptions, selectedIndex, routes]);\n\n  const tabs = (\n    <>\n      <Tabs className={classes.tabContainer} value={value} onChange={changeHandler} indicatorColor=\"secondary\">\n        {routes.map((route) => (\n          <Tab\n            key={`${route}${route.activeIndex}`}\n            className={classes.tab}\n            component={Link}\n            to={route.link}\n            label={route.name}\n            aria-owns={route.ariaOwse}\n            aria-haspopup={route.ariaPopup}\n            onMouseOver={route.mouseOver}\n          />\n        ))}\n      </Tabs>\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n        Free Estimate\n      </Button>\n      <Menu\n        keepMounted\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        classes={{ paper: classes.menu }}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n      >\n        {menuOptions.map((option, i) => (\n          <MenuItem\n            key={`${option}${i}`}\n            onClick={(event) => {\n              handeleMenuItemClick(event, i);\n              setValue(1);\n              handleClose();\n            }}\n            selected={i === selectedIndex && value === 1}\n            component={Link}\n            to={option.link}\n            className={{ root: classes.menuItem }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n\n  const drawer = (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        Example\n        Drawer\n        classes={{ paper: classes.drawer }}\n      >\n        <div className={classes.toolbarMargin} />\n        <List disablePadding>\n          {routes.map((route) => (\n            <ListItem\n              key={`${route}${route.activeIndex}`}\n              divider\n              button\n              component={Link}\n              to={route.link}\n              selected={value === route.activeIndex}\n              classes={{ selected: classes.drawerItemselected }}\n              onClick={() => {\n                setOpenDrawer(false);\n                setValue(route.activeIndex);\n              }}\n            >\n              <ListItemText className={classes.drawerItem} disableTypography>\n                {route.name}\n              </ListItemText>\n            </ListItem>\n          ))}\n\n          <ListItem\n            classes={{ root: classes.drawerItemEstimate, selected: classes.drawerItemselected }}\n            onclick={() => {\n              setOpenDrawer(false);\n              setValue(5);\n            }}\n            divider\n            button\n            components={Link}\n            to=\"/estimate\"\n            selected={value === 5}\n          >\n            <ListItemText className={classes.drawerItem} disableTypography>\n              Free Estimate\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n\n      <IconButton className={classes.drawerIconContainer} onClick={() => setOpenDrawer(!openDrawer)} disableRipple>\n        <MenuIcon className={classes.drawerIcon} />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appbar}>\n          <ToolBar disableGutters>\n            <Button disableRipple component={Link} to=\"/\" className={classes.logocontainer}>\n              <img src={logo} alt=\"company logo\" className={classes.logo} />\n            </Button>\n            {matches ? drawer : tabs}\n          </ToolBar>\n        </AppBar>\n      </ElevationScroll>\n\n      <div className={classes.toolbarMargin} />\n    </>\n  );\n}\n\nexport default Header;\n",[],"/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Theme.jsx",[],[],"/Users/nedanemati/Desktop/material-ui-github/src/components/ui/Footer.jsx",["57","58"],[],"import { makeStyles } from \"@mui/styles\";\nimport { width } from \"@mui/system\";\nimport { position } from \"dom-helpers\";\nimport footerAdornment from \"../../assets/Footer Adornment.svg\";\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.common.blue,\n    width: \"100%\",\n    zIndex: 1302,\n    position: \"relative\",\n  },\n  adornment: {\n    width: \"25em\",\n    verticalAlign: \"bottom\",\n    [theme.breakpoints.down(\"md\")]: { width: \"21em\" },\n    [theme.breakpoints.down(\"xs\")]: { width: \"15em\" },\n  },\n}));\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <img alt=\"black decorative slash\" src={footerAdornment} className={classes.adornment} />\n    </footer>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"59","severity":1,"message":"60","line":157,"column":9,"nodeType":"61","endLine":162,"endColumn":4},{"ruleId":"59","severity":1,"message":"62","line":163,"column":9,"nodeType":"61","endLine":176,"endColumn":4},{"ruleId":"63","severity":1,"message":"64","line":229,"column":9,"nodeType":"65","messageId":"66","endLine":229,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":18},"react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 196) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 196) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'width' is defined but never used.","Identifier","unusedVar","'position' is defined but never used."]